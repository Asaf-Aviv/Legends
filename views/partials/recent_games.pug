-
    const popoff = {
        '2': 'Double Kill',
        '3': 'Triple Kill',
        '4': 'Quadra Kill',
        '5': 'PENTA KILL'
    }

#recent-games
    - for (let i = 0, x = recentGames.length; i < x; i++)
        - const game = recentGames[i]
        - const playerIndex = game.participantIdentities.findIndex(p => p.player.summonerId == summoner.id)
        - const playerRecap = game.participants[playerIndex]
        - const gameDuration = moment.duration(game.gameDuration, 's').format('H:mm:ss')
        - const stats = playerRecap.stats
        .recent-game-wrapper
            .game-header.d-flex
                .time= moment(game.gameCreation + (game.gameDuration * 1000)).subtract().fromNow()
                .map= leagueConstants.queue[game.queueId].map
                .queue= leagueConstants.queue[game.queueId].description
                .length= gameDuration
                .analyze-match
                    a(href="#").ml-auto Analyze Match
            .game-wrapper(class=stats.win ? 'win' : 'loss')
                .summoner-info
                    .champ
                        a(href=`/champions/${cmpId[playerRecap.championId]}`)
                            img(src=`${ddragon}/img/champion/${cmpId[playerRecap.championId]}.png`
                            data-toggle="tooltip" data-title=cmpId[playerRecap.championId])
                    .summoners
                        img(src=`${ddragon}/img/spell/${summonerSpells.data[playerRecap.spell1Id].image.full}`
                            data-toggle="tooltip" data-title=summonerSpells.data[playerRecap.spell1Id].description)
                        img(src=`${ddragon}/img/spell/${summonerSpells.data[playerRecap.spell2Id].image.full}`
                            data-toggle="tooltip" data-title=summonerSpells.data[playerRecap.spell2Id].description)
                    .runes
                        img(src=`/assets/league/img/runesReforged/perk/${stats.perk0}.png`
                            data-toggle="tooltip" data-title=runesReforged[stats.perk0].longDesc data-html="true")
                        img(src=`/assets/league/img/runesReforged/perk/${stats.perkSubStyle}.png`
                            data-toggle="tooltip" data-title=runeDesc[stats.perkSubStyle].shortDesc)
                
                .KDA
                    span= stats.kills
                    |  / 
                    span= stats.deaths
                    |  / 
                    span= stats.assists
                    .minions
                        - const totalMinions = stats.totalMinionsKilled + stats.neutralMinionsKilled
                        span= `${totalMinions} CS (${(totalMinions / gameDuration.split(':')[0]).toFixed(2)} / m)`
                    if stats.firstBloodKill
                        .first-blood
                            span First Blood
                    .multi-kill
                        span= popoff[stats.largestMultiKill]
                    .level
                        span= 'Level ' + stats.champLevel
                

                .end-game-items
                    - for (let z = 0; z < 7; z++)
                        - let itemId
                        if z === 3
                            - itemId = stats['item6']
                        else if z === 6
                            - itemId = stats['item3']
                        else
                            - itemId = stats['item'+z]
                        if itemId
                            .item
                                img(src=`${ddragon}/img/item/${itemId}.png`)
                    if stats.wardsPlaced
                        .wards Placed 
                            span= stats.wardsPlaced
                            |  Wards
                    if stats.visionWardsBoughtInGame
                        .wards Bought 
                            span= stats.visionWardsBoughtInGame
                            = stats.visionWardsBoughtInGame > 1 ? ' Vision Wards' : ' Vision Ward'
                            
                .teams
                    - blueTeamPlayers = game.participants.filter(p => p.teamId === 100)
                    - redTeamPlayers = game.participants.filter(p => p.teamId === 200)
                    .blue-team
                        
                        - for (let k = 0; k < blueTeamPlayers.length; k++)
                            .player
                                .champion.mr-1
                                    a(href=`/champions/${cmpId[blueTeamPlayers[k].championId]}`)
                                        img(src=`${ddragon}/img/champion/${cmpId[blueTeamPlayers[k].championId]}.png`
                                            data-toggle="tooltip" data-title=champInfo.data[blueTeamPlayers[k].championId].name)
                                .summoner
                                    - const summonerName = game.participantIdentities[k].player.summonerName
                                    a(href=`/summoner?userName=${summonerName}&region=${game.platformId}`)= summonerName
                    .red-team
                        - for (let j = 0; j < redTeamPlayers.length; j++)
                            .player
                                .champion.mr-1
                                    a(href=`/champions/${cmpId[redTeamPlayers[j].championId]}`)
                                        img(src=`${ddragon}/img/champion/${cmpId[redTeamPlayers[j].championId]}.png`
                                            data-toggle="tooltip" data-title=champInfo.data[redTeamPlayers[j].championId].name)
                                .summoner
                                    - const summonerName = game.participantIdentities[j+redTeamPlayers.length].player.summonerName
                                    a(href=`/summoner?userName=${summonerName}&region=${game.platformId}`)= summonerName